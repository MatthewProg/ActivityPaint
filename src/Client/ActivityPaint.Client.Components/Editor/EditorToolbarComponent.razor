<div class="btn-toolbar w-100" role="toolbar">
    <div class="btn-group" role="group">
        @foreach(var tool in Enum.GetValues<EditorTool>())
        {
            (var id, var icon) = GetToolInfo(tool);
            var toolId = $"btn-tool-{id}";

            <input type="radio" class="btn-check" name="btn-tools" id="@toolId" autocomplete="off" checked="@(CurrentTool == tool)" @onchange="ToolChanged">
            <label class="btn btn-outline-secondary" for="@toolId"><span class="bi @icon" aria-hidden="true"></span></label>
        }
    </div>
    <div class="input-group">
        <div class="input-group-text">Size</div>
        <input type="number" min="1" class="form-control">
    </div>
</div>

@code {
    public enum EditorTool
    {
        Brush, Eraser, Fill
    }

    [Parameter]
    public EditorTool CurrentTool { get; set; } = EditorTool.Brush;

    [Parameter]
    public EventCallback<EditorTool> CurrentToolChanged { get; set; }

    private void ToolChanged(ChangeEventArgs args)
    {
        var a = args.Value;
    }

    private static (string id, string icon) GetToolInfo(EditorTool tool) => tool switch
    {
        EditorTool.Brush => ("brush", "bi-brush-fill"),
        EditorTool.Eraser => ("eraser", "bi-eraser-fill"),
        EditorTool.Fill => ("fill", "bi-paint-bucket"),
        _ => throw new NotImplementedException()
    };
}
