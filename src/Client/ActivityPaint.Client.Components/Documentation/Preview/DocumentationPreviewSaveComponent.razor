@using ActivityPaint.Client.Components.Documentation.Shared
@using ActivityPaint.Client.Components.Documentation.Shared.Overview
@using ActivityPaint.Client.Components.Shared.Components.Code
@using Option = ActivityPaint.Client.Components.Documentation.Shared.OptionsTable.DocumentationOptionsTableModel
@using Command = ActivityPaint.Client.Components.Documentation.Shared.CommandsTable.DocumentationCommandsTableModel
@implements IDocumentationPage

<DocumentationPageComponent Page="this">
    This command allows to generate an image depicting the commit history graph on the GitHub profile page after uploading
    the repository generated by the application. The resulting image has the same size as the element on the website and
    is exported as a <CodeComponent>.png</CodeComponent> file.
</DocumentationPageComponent>

@code {
    private const string _title = "Saving preview image";
    private static readonly DocumentationOverviewCommandModel _command = new("ap-cli.exe preview [OPTIONS]", "save <PRESET> <OUTPUT> [OPTIONS]");
    private static readonly Command _parent = new("preview", "Preview image commands", "/documentation/preview");
    private static readonly List<string> _aliases = ["save", "s"];
    private static readonly List<Option> _arguments =
    [
        Option.Build<string>("<PRESET>", true, "Path to the preset file"),
        Option.Build<string>("<OUTPUT>", true, "Path to the output .png file"),
    ];
    private static readonly List<Option> _options =
    [
        Option.Build<bool>("--force", false, "Overwrite the existing file", "false")
    ];
    private static readonly List<string> _examples =
    [
        "ap-cli.exe preview --dark-mode-overwrite true save ./preset.json C:\\tmp\\preview.png --force",
        "ap-cli.exe p s preset.json preview.png"
    ];

    public string Title { get; } = _title;
    public DocumentationOverviewCommandModel Command { get; } = _command;
    public Command? Parent { get; } = _parent;
    public IEnumerable<string> Aliases { get; } = _aliases;
    public IEnumerable<Option> Options { get; } = _options;
    public IEnumerable<Option> Arguments { get; } = _arguments;
    public IEnumerable<Command> Commands { get; } = [];
    public IEnumerable<string> Examples { get; } = _examples;
}
