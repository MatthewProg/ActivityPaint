@using ActivityPaint.Client.Components.Documentation.Shared
@using ActivityPaint.Client.Components.Shared.Components.Code
@using Option = ActivityPaint.Client.Components.Documentation.Shared.DocumentationOptionsTableModel
@implements IDocumentationPage

<DocumentationPageComponent Page="this">
    This command allows to generate a list of git commands that, when run, will create a repository with the
    contribution history matching the canvas.
</DocumentationPageComponent>

@code {
    private const string _title = "Git commands";
    private const string _command = "ap-cli.exe git [OPTIONS] <COMMAND>";
    private static readonly List<string> _aliases = ["git"];
    private static readonly List<Option> _options =
    [
        Option.Build<string>("-m|--message", "Commit message format (default: set in the appsettings.json file - Repo:MessageFormat)", "ActivityPaint - '{name}' - (Commit {current_total}/{total_count})"),
        Option.Build<string>("-o|--output", "Path to the output txt file with all the commands"),
        Option.Build<bool>("--force", "Overwrite the existing file (relevant only when --output is used)", false)
    ];
    private static readonly List<string> _examples =
    [
        "ap-cli.exe git --output commands.txt --force --message \"'{name}' #{current_total}\" new --name Rainbow --start-date 2020-01-01 --data eAFiZmJkYGRiZmEepekQDgAAAAD//w==",
        "ap-cli.exe git -o shapes.txt l C:\\temp\\shapes_preset.json"
    ];

    public string Title { get; } = _title;
    public string Command { get; } = _command;
    public IEnumerable<string> Aliases { get; } = _aliases;
    public IEnumerable<DocumentationOptionsTableModel> Options { get; } = _options;
    public IEnumerable<string> Examples { get; } = _examples;
}
