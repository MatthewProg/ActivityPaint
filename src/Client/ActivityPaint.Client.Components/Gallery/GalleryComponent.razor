@using ActivityPaint.Application.BusinessLogic.Gallery
@using ActivityPaint.Application.DTOs.Preset
@using ActivityPaint.Client.Components.Shared.Services
@using ActivityPaint.Client.Components.Shared.Utilities
@using Mediator
@inject IFeedbackService FeedbackService
@inject IMediator Mediator

<button @onclick="LoadMore">Load</button>
<MudGrid Justify="Justify.Center">
    @foreach (var item in _items)
    {
        <MudItem xs="12" sm="6" lg="4">
            <GalleryItemComponent Item="item" ParentReadyListener="_itemsReadyTrigger" DeleteCallback="Delete" />
        </MudItem>
    }
    @if (!_items.Any())
    {
        <h1>Loading...</h1>
    }
</MudGrid>

@code {
    private const int _pageSize = 18;
    private IEnumerable<PresetModel> _items = [];
    private int _page = 0;
    private AsyncTrigger _itemsReadyTrigger = new();

    protected override async Task OnInitializedAsync()
    {
        await Task.Factory.StartNew(LoadMore);
        await base.OnInitializedAsync();
    }

    private async Task LoadMore()
    {
        _page++;

        var command = new LoadGalleryItemsCommand(_page, _pageSize);
        var result = await Mediator.Send(command);

        if (result.IsFailure || result.Value is null)
        {
            FeedbackService.ShowError(result.Error);
            return;
        }

        _items = _items.Concat(result.Value);
        await Task.Delay(1);
        await _itemsReadyTrigger.Notify();
    }

    private async Task Delete(PresetModel item)
    {
        throw new NotImplementedException();
    }
}
